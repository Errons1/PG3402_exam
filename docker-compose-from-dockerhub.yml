name: bank_dockerhub
version: "0.1"

services:
  consul:
    image: consul:1.15.4
    container_name: consul-dockerhub
    ports:
      - 8500:8500
      - 8600:8600/udp
    networks:
      - spring-docker
  
  consul-importer:
    image: errons1/consul-importer:latest
    container_name: consul-importer-dockerhub
    depends_on:
      - consul
    networks:
      - spring-docker
  
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq-dockerhub
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - spring-docker
  
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin-dockerhub
    ports:
      - 9411:9411
    networks:
      - spring-docker
  
  db-authentication:
    image: postgres
    container_name: db-authentication-dockerhub
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5400:5432
    networks:
      - spring-docker

  db-customer:
    image: postgres
    container_name: db-customer-dockerhub
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5500:5432
    networks:
      - spring-docker

  db-account:
    image: postgres
    container_name: db-account-dockerhub
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5600:5432
    networks:
      - spring-docker
  
  logs:
    image: errons1/logs:latest
    container_name: logs-dockerhub
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring-docker

  gateway:
    image: errons1/gateway:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring-docker
    deploy:
      replicas: 3
  
  frontend:
    image: errons1/frontend:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring-docker
    deploy:
      replicas: 3
  
  account:
    image: errons1/account:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring-docker
    deploy:
      replicas: 3
  
  customer:
    image: errons1/customer:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring-docker
    deploy:
      replicas: 3
  
  authentication:
    image: errons1/authentication:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring-docker
    deploy:
      replicas: 3

  transfer:
    image: errons1/transfer:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring-docker
    deploy:
      replicas: 3

networks:
  spring-docker:
    driver: bridge