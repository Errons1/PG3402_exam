name: bank
version: "0.1"

services:
  consul:
    image: consul:1.15.4
    container_name: consul
    ports:
      - 8500:8500
      - 8600:8600/udp
    networks:
      - spring
  
  consul-importer:
    image: consul-importer:latest
    container_name: consul-importer
    build:
      context: consul-importer
      dockerfile: Dockerfile
    depends_on:
      - consul
    networks:
      - spring
      
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - spring
  
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - spring
  
  db-authentication:
    image: postgres
    container_name: db-authentication
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5400:5432
    networks:
      - spring

  db-customer:
    image: postgres
    container_name: db-customer
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5500:5432
    networks:
      - spring

  db-account:
    image: postgres
    container_name: db-account
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - 5600:5432
    networks:
      - spring
        
  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    image: frontend:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring
  
  account:
    container_name: account
    build:
      context: account
      dockerfile: Dockerfile
    image: account:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring
#    deploy:
#      replicas: 3
  
  customer:
    container_name: customer
    build:
      context: customer
      dockerfile: Dockerfile
    image: customer:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring
#    deploy:
#      replicas: 3
  
  authentication:
    container_name: authentication
    build:
      context: authentication
      dockerfile: Dockerfile
    image: authentication:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring
#    deploy:
#      replicas: 3

  logs:
    container_name: logs
    build:
      context: logs
      dockerfile: Dockerfile
    image: logs:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring

  gateway:
    container_name: gateway
    build:
      context: gateway
      dockerfile: Dockerfile
    image: gateway:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 8080:8080
    networks:
      - spring
  
  transfer:
    container_name: transfer
    build:
      context: transfer
      dockerfile: Dockerfile
    image: transfer:latest
    depends_on:
      consul:
        condition: service_started
      rabbitmq:
        condition: service_started
      zipkin:
        condition: service_started
    ports:
      - 0:8080
    networks:
      - spring

networks:
  spring:
    driver: bridge